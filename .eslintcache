[{"/home/zhan/Projects/readymage-luma-demo-kgy-1603788696/src/localmodules/scandipwa-theme/src/component/DemoNotice/DemoNotice.container.js":"1","/home/zhan/Projects/readymage-luma-demo-kgy-1603788696/src/localmodules/scandipwa-theme/src/component/Header/Header.component.js":"2","/home/zhan/Projects/readymage-luma-demo-kgy-1603788696/src/localmodules/scandipwa-theme/src/component/DemoNotice/DemoNotice.component.js":"3","/home/zhan/Projects/readymage-luma-demo-kgy-1603788696/src/localmodules/scandipwa-theme/src/component/ProductAttributeValue/ProductAttributeValue.component.js":"4","/home/zhan/Projects/readymage-luma-demo-kgy-1603788696/src/localmodules/scandipwa-theme/src/component/ExpandableContentShowMore/ExpandableContentShowMore.component.js":"5"},{"size":797,"mtime":1610365328576,"results":"6","hashOfConfig":"7"},{"size":107,"mtime":1610365138599,"results":"8","hashOfConfig":"7"},{"size":822,"mtime":1610365240438,"results":"9","hashOfConfig":"7"},{"size":152,"mtime":1610365555134,"results":"10","hashOfConfig":"7"},{"size":5461,"mtime":1610365523157,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"sd4z4g",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/home/zhan/Projects/readymage-luma-demo-kgy-1603788696/src/localmodules/scandipwa-theme/src/component/DemoNotice/DemoNotice.container.js",[],["24","25","26","27","28","29"],"/home/zhan/Projects/readymage-luma-demo-kgy-1603788696/src/localmodules/scandipwa-theme/src/component/Header/Header.component.js",[],"/home/zhan/Projects/readymage-luma-demo-kgy-1603788696/src/localmodules/scandipwa-theme/src/component/DemoNotice/DemoNotice.component.js",[],"/home/zhan/Projects/readymage-luma-demo-kgy-1603788696/src/localmodules/scandipwa-theme/src/component/ProductAttributeValue/ProductAttributeValue.component.js",[],"/home/zhan/Projects/readymage-luma-demo-kgy-1603788696/src/localmodules/scandipwa-theme/src/component/ExpandableContentShowMore/ExpandableContentShowMore.component.js",["30","31"],"/**\n * ScandiPWA - Progressive Web App for Magento\n *\n * Copyright Â© Scandiweb, Inc. All rights reserved.\n * See LICENSE for license details.\n *\n * @license OSL-3.0 (Open Software License (\"OSL\") v. 3.0)\n * @package scandipwa/base-theme\n * @link https://github.com/scandipwa/base-theme\n */\n\nimport PropTypes from 'prop-types';\nimport { createRef, PureComponent } from 'react';\n\nimport { ChildrenType } from 'Type/Common';\n\nimport './ExpandableContentShowMore.style';\n\n/** @namespace Component/ExpandableContentShowMore/Component */\n// eslint-disable-next-line @scandipwa/scandipwa-guidelines/use-namespace, @scandipwa/scandipwa-guidelines/derived-class-names\nexport class ExpandableContentShowMore extends PureComponent {\n    static propTypes = {\n        showElemCount: PropTypes.number,\n        children: ChildrenType.isRequired,\n        isMobile: PropTypes.bool.isRequired\n    };\n\n    static defaultProps = {\n        showElemCount: 3\n    };\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    componentDidMount() {\n        const { isOpen } = this.state;\n\n        if (isOpen) {\n            if (this.expandableRef.current) {\n                this.expandableContentHeight = this.expandableRef.current.getBoundingClientRect().height;\n            }\n            this.setState({ isOpen: false });\n        }\n    }\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    componentDidUpdate(prevProps) {\n        const { isExpanding } = this.state;\n\n        if (isExpanding) {\n            const ONE_SECOND_IN_MS = 1000;\n            const transitionDurationCSStoMS = window\n                .getComputedStyle(this.expandableRef.current)\n                .getPropertyValue('transition-duration')\n                .slice(0, -1) * ONE_SECOND_IN_MS;\n\n            setTimeout(() => this.setState({ isExpanding: false }),\n                transitionDurationCSStoMS);\n        }\n\n        const { children: { length } } = this.props;\n        const { children: { length: prevLength } } = prevProps;\n\n        if (length !== prevLength) {\n            this.getExpandableContentHeight();\n        }\n    }\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    __construct(props) {\n        super.__construct(props);\n\n        this.ref = createRef();\n\n        const { showElemCount, children: { length } } = this.props;\n\n        this.expandableRef = createRef();\n        this.expandableContentHeight = 'auto';\n\n        this.state = {\n            isOpen: length > showElemCount,\n            isExpanding: false\n        };\n    }\n\n    // eslint-disable-next-line @scandipwa/scandipwa-guidelines/only-render-in-component\n    getExpandableContentHeight() {\n        const { isOpen } = this.state;\n        const { showElemCount, children: { length } } = this.props;\n\n        if (isOpen && length <= showElemCount) {\n            this.setState({ isOpen: false });\n            return;\n        }\n\n        this.expandableContentHeight = 'auto';\n        this.setState({ isOpen: true }, () => {\n            this.expandableContentHeight = this.expandableRef.current.getBoundingClientRect().height;\n            this.setState({ isOpen: false });\n        });\n    }\n\n    handleShowAllButtonClick = () => {\n        const { isExpanding } = this.state;\n\n        if (!isExpanding) {\n            this.setState(({ isOpen }) => ({ isOpen: !isOpen, isExpanding: true }));\n        }\n    };\n\n    renderShowAllButton() {\n        const { showElemCount, children: { length } } = this.props;\n        console.log(['showAll-0']);\n        if (length <= showElemCount) {\n            return null;\n        }\n        console.log(['showAll-1']);\n\n        const { isOpen } = this.state;\n\n        const mods = isOpen ? { state: 'isOpen' } : {};\n        const txt = isOpen ? __('Show less') : ('Show more');\n\n        return (\n            <button\n              onClick={ this.handleShowAllButtonClick }\n              mix={ { block: 'Button', mods: { likeLink: true } } }\n              block=\"ExpandableContentShowMore\"\n              elem=\"ShowAllButton\"\n              mods={ mods }\n            >\n                { txt }\n            </button>\n        );\n    }\n\n    renderExpandableChildren() {\n        const { isOpen, isExpanding } = this.state;\n        const { children, showElemCount } = this.props;\n\n        const child = (isOpen || isExpanding) ? children.slice(showElemCount) : null;\n        const style = {\n            height: isOpen ? this.expandableContentHeight : 0\n        };\n\n        return (\n            <div\n              ref={ this.expandableRef }\n              block=\"ExpandableContentShowMore\"\n              elem=\"ExpandableChildren\"\n              style={ style }\n            >\n                { child }\n            </div>\n        );\n    }\n\n    renderContent() {\n        const { children, showElemCount } = this.props;\n\n        const child = children.slice(0, showElemCount);\n\n        return (\n            <>\n                { child }\n                { this.renderExpandableChildren() }\n                { this.renderShowAllButton() }\n            </>\n        );\n    }\n\n    render() {\n        const { children, isMobile } = this.props;\n\n        if (isMobile) {\n            return children;\n        }\n\n        return (\n            <div block=\"ExpandableContentShowMore\" ref={ this.ref }>\n                { this.renderContent() }\n            </div>\n        );\n    }\n}\nexport default ExpandableContentShowMore;\n",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":111,"column":9,"nodeType":"46","messageId":"47","endLine":111,"endColumn":20},{"ruleId":"44","severity":1,"message":"45","line":115,"column":9,"nodeType":"46","messageId":"47","endLine":115,"endColumn":20},"lines-around-directive",["48"],"no-spaced-func",["49"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements","func-call-spacing"]